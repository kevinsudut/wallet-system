// Code generated by MockGen. DO NOT EDIT.
// Source: app/usecase/transaction/interfaces.go
//
// Generated by this command:
//
//	mockgen -source=app/usecase/transaction/interfaces.go -destination=app/usecase/transaction/mock.go -package=usecasetransaction
//

// Package usecasetransaction is a generated GoMock package.
package usecasetransaction

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUsecaseItf is a mock of UsecaseItf interface.
type MockUsecaseItf struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseItfMockRecorder
}

// MockUsecaseItfMockRecorder is the mock recorder for MockUsecaseItf.
type MockUsecaseItfMockRecorder struct {
	mock *MockUsecaseItf
}

// NewMockUsecaseItf creates a new mock instance.
func NewMockUsecaseItf(ctrl *gomock.Controller) *MockUsecaseItf {
	mock := &MockUsecaseItf{ctrl: ctrl}
	mock.recorder = &MockUsecaseItfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecaseItf) EXPECT() *MockUsecaseItfMockRecorder {
	return m.recorder
}

// ListOverallTopTransactingUsersByValue mocks base method.
func (m *MockUsecaseItf) ListOverallTopTransactingUsersByValue(ctx context.Context, req ListOverallTopTransactingUsersByValueRequest) (ListOverallTopTransactingUsersByValueResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOverallTopTransactingUsersByValue", ctx, req)
	ret0, _ := ret[0].(ListOverallTopTransactingUsersByValueResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOverallTopTransactingUsersByValue indicates an expected call of ListOverallTopTransactingUsersByValue.
func (mr *MockUsecaseItfMockRecorder) ListOverallTopTransactingUsersByValue(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOverallTopTransactingUsersByValue", reflect.TypeOf((*MockUsecaseItf)(nil).ListOverallTopTransactingUsersByValue), ctx, req)
}

// TopTransactionsForUser mocks base method.
func (m *MockUsecaseItf) TopTransactionsForUser(ctx context.Context, req TopTransactionsForUserRequest) (TopTransactionsForUserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TopTransactionsForUser", ctx, req)
	ret0, _ := ret[0].(TopTransactionsForUserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TopTransactionsForUser indicates an expected call of TopTransactionsForUser.
func (mr *MockUsecaseItfMockRecorder) TopTransactionsForUser(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopTransactionsForUser", reflect.TypeOf((*MockUsecaseItf)(nil).TopTransactionsForUser), ctx, req)
}
